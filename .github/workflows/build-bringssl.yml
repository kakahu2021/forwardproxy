name: Build-bringssl
on:
  push:
    branches: [naive]
    paths-ignore: [README.md]
  release:
    types: [created]
defaults:
  run:
    shell: bash
jobs:
  build_caddy_with_naive:
    runs-on: ubuntu-22.04
    env:
      BUNDLE: caddy-forwardproxy-naive
      BORINGSSL_BRANCH: master
      BORINGSSL_DIR: ${{ github.workspace }}/boringssl
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-go@v5
        with:
          go-version: ^1.21.9

      # 安装编译依赖
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake gcc ninja-build libunwind-dev pkg-config python3 golang-cfssl

      # 安装 liboqs
      - name: Install liboqs
        run: |
          git clone --branch main --single-branch --depth 1 https://github.com/open-quantum-safe/liboqs.git
          cd liboqs
          mkdir build && cd build
          cmake -G"Ninja" -DCMAKE_INSTALL_PREFIX=${{ env.BORINGSSL_DIR }}/oqs -DOQS_USE_OPENSSL=OFF ..
          ninja
          ninja install
          cd ../..

      # 克隆和编译支持 PQC 的 BoringSSL
      - name: Build BoringSSL
        run: |
          rm -rf boringssl
          git clone https://github.com/open-quantum-safe/boringssl.git
          cd boringssl
          git checkout $BORINGSSL_BRANCH
          mkdir build
          cd build
          cmake -GNinja ..
          ninja

      # 使用自定义 BoringSSL 编译 Caddy
      - name: Build Caddy
        run: |
          go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest
          CGO_ENABLED=1 \
          BORINGSSL_PATH=${{ env.BORINGSSL_DIR }} \
          ~/go/bin/xcaddy build \
            --with github.com/caddyserver/forwardproxy@master=$PWD

      - name: Pack naiveproxy assets
        run: |
          mkdir ${{ env.BUNDLE }}
          cp caddy LICENSE README.md ${{ env.BUNDLE }}
          tar cJf ${{ env.BUNDLE }}.tar.xz ${{ env.BUNDLE }}
          openssl sha256 ./caddy >sha256sum.txt
          echo "SHA256SUM=$(cut -d' ' -f2 sha256sum.txt)" >>$GITHUB_ENV

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUNDLE }}.tar.xz caddy executable sha256 ${{ env.SHA256SUM }}
          path: sha256sum.txt

      - name: Generate release tag
        if: github.event_name == 'push'
        run: echo "RELEASE_TAG=build-$(date +"%Y%m%d%H%M%S")" >> $GITHUB_ENV

      - name: Upload to Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.BUNDLE }}.tar.xz
          tag_name: ${{ github.event_name == 'release' && github.ref_name || env.RELEASE_TAG }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
